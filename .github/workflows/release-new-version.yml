name: Release new version

on:
  push:
    branches: [ master ]

jobs:
  releaseNewVersion:
    name: 'Release new version'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 'Use Node.js'
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 'Setup cache for node_modules'
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: 'Prepare git'
        run: |
          git config --global user.email "noreply@github.com"
          git config --global user.name "github version update"
          git branch -u origin/master master

      - name: 'Install project'
        run: yarn install

      - name: 'Increase version'
        run: npx standard-version

      - name: 'Push new version to git'
        run: git push --follow-tags

  publishDefaultConfig:
    name: 'Publish default config'
    needs: releaseNewVersion
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 'Use Node.js'
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 'Prepare git'
        run: git pull

      - name: 'Setup cache for node_modules'
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: 'Install project'
        run: yarn install

      - name: 'Build release'
        run: npx ./scripts/build.js @andrmoel/eslint-config default

      - name: 'Publish release to npm'
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./dist/package.json

  publishReactConfig:
    name: 'Publish React config'
    needs: releaseNewVersion
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 'Use Node.js'
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 'Prepare git'
        run: git pull

      - name: 'Setup cache for node_modules'
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: 'Install project'
        run: yarn install

      - name: 'Build release'
        run: npx ./scripts/build.js @andrmoel/eslint-config-react react

      - name: 'Publish release to npm'
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./dist/package.json

  publishTypeScriptConfig:
    name: 'Publish TypeScript config'
    needs: releaseNewVersion
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 'Use Node.js'
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 'Prepare git'
        run: git pull

      - name: 'Setup cache for node_modules'
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: 'Install project'
        run: yarn install

      - name: 'Build release'
        run: npx ./scripts/build.js @andrmoel/eslint-config-typescript typescript

      - name: 'Publish release to npm'
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./dist/package.json
